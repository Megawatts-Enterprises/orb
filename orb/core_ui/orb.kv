#:kivy 1.11.0
#:import sp kivy.metrics.sp
#:import dp kivy.metrics.dp
#:import data_manager data_manager
#:import NewAddress orb.screens.new_address_screen.NewAddress
#:import SendCoins orb.screens.send_coins.SendCoins
#:import IngestInvoicesScreen orb.screens.ingest_invoices_screen.IngestInvoicesScreen
#:import PayScreen orb.screens.pay_screen.PayScreen
#:import ConnectScreen orb.screens.connect_screen.ConnectScreen
#:import OpenChannelScreen orb.screens.open_channel_screen.OpenChannelScreen
#:import BatchOpenScreen orb.screens.batch_open_screen.BatchOpenScreen
#:import CloseChannel orb.screens.close_channel.CloseChannel
#:import Rebalance orb.screens.rebalance.Rebalance
#:import prefs_col orb.misc.utils.prefs_col
#:import view_forwarding_history orb.dialogs.forwarding_history.view_forwarding_history
#:import graph_fees_earned orb.dialogs.forwarding_history.graph_fees_earned
#:import FeeDistribution orb.dialogs.fee_distribution.FeeDistribution
#:import About orb.screens.about.About
#:import Rankings orb.screens.rankings.Rankings
#:import FeeSpy orb.dialogs.fee_spy.FeeSpy

#: import webbrowser webbrowser
########################################################################################
# MAIN
########################################################################################

<TopMenu@AppMenu>:

<MainLayout>:
    id: main_layout
    menu_visible: any([view_context_menu.visible, scripts_context_menu.visible, app_context_menu.visible, lightning_context_menu.visible, help_context_menu.visible, onchain_context_menu.visible])
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: 35 / 255, 35 / 255, 35 / 255, 1
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        id: box_layout
        orientation: "vertical"
        size: root.width, root.height
        canvas.before:
            Color:
                rgba: 1, 0, 0, (0.1 * (app.config['debug']['layouts'] == '1'))
            Rectangle:
                pos: self.pos
                size: self.size
        ScreenManager:
            id: sm
            canvas.before:
                Color:
                    rgba: 0, 1, 1, (0.1 * (app.config['debug']['layouts'] == '1'))
                Rectangle:
                    pos: self.pos
                    size: self.size
            ChannelsScreen:
                id: channels
            MailScreen
            ConsoleScreen
        StatusLine
            id: status_line
    TopMenu:
        id: app_menu
        top: root.height
        cancel_handler_widget: main_layout

        AppMenuTextItem:
            text: "View"
            ContextMenu:
                id: view_context_menu
        AppMenuTextItem:
            text: "Lightning"
            ContextMenu:
                id: lightning_context_menu
                ContextMenuTextItem:
                    text: "Channels"
                    on_release: app_menu.close_all()
                    on_press: app.root.ids.sm.current = 'channels'
                ContextMenuTextItem:
                    text: "Pay"
                    on_release: app_menu.close_all()
                    on_press:  PayScreen().open()
                ContextMenuTextItem:
                    text: "Rebalance"
                    on_release: app_menu.close_all()
                    on_press:  Rebalance().open()
                ContextMenuTextItem:
                    text: "Mail"
                    on_press:  app.root.ids.sm.current = 'mail'
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Open Channel"
                    on_press:  OpenChannelScreen().open()
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Batch Open"
                    on_press:  BatchOpenScreen().open()
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Close Channel"
                    on_press:  CloseChannel().open()
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Connect"
                    on_press:  ConnectScreen().open()
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Ingest Invoices"
                    on_press: IngestInvoicesScreen().open()
                    on_release: app_menu.close_all()
                # ContextMenuTextItem:
                #     text: "Fee Spy"
                #     on_press: FeeSpy().open()
                #     on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Rankings"
                    on_press: Rankings().open()
                    on_release: app_menu.close_all()
                ContextMenuTextItem:
                    text: "Forwarding History"
                    ContextMenu:
                        ContextMenuTextItem:
                            text: "Total Routing"
                            on_release: (view_forwarding_history(), app_menu.close_all())
                        ContextMenuTextItem:
                            text: "Fees Earned"
                            on_press: graph_fees_earned()
                            on_release: app_menu.close_all()
                        ContextMenuTextItem:
                            text: "Fee Distribution"
                            on_press: FeeDistribution().open()
                            on_release: app_menu.close_all()
        AppMenuTextItem:
            text: "On-Chain"
            ContextMenu:
                id: onchain_context_menu
                ContextMenuTextItem:
                    text: "New Address"
                    on_press: app_menu.close_all()
                    on_release: NewAddress().open()
                ContextMenuTextItem:
                    text: "Send Coins"
                    on_press: app_menu.close_all()
                    on_release: SendCoins().open()
        AppMenuTextItem:
            text: "App"
            ContextMenu:
                id: app_context_menu
                ContextMenuTextItem:
                    text: "Settings"
                    on_press: app_menu.close_all()
                    on_release: app.open_settings()
                ContextMenuTextItem:
                    text: "Quit"
                    on_press: app_menu.close_all()
                    on_release: app.get_running_app().stop()
                ContextMenuTextItem:
                    text: "Console"
                    on_press:  app.root.ids.sm.current = 'console'
                    on_release: app_menu.close_all()
        AppMenuTextItem:
            text: "Scripts"
            id: scripts
            ContextMenu:
                id: scripts_context_menu
        AppMenuTextItem:
            text: "Help"
            ContextMenu:
                id: help_context_menu
                ContextMenuTextItem:
                    text: "About"
                    on_press: app_menu.close_all()
                    on_release: About().open()
                ContextMenuTextItem:
                    text: "Links"
                    ContextMenu:
                        ContextMenuTextItem:
                            text: "Terminal"
                            on_release: webbrowser.open("https://terminal.lightning.engineering/#/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "Amboss"
                            on_release: webbrowser.open("https://amboss.space/node/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "LNRouter"
                            on_release: webbrowser.open("https://lnrouter.app/node/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "LNNodeInsight"
                            on_release: webbrowser.open("https://lnnodeinsight.com/")
                        ContextMenuTextItem:
                            text: "1ML"
                            on_release: webbrowser.open("https://1ml.com/node/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "HashXP"
                            on_release: webbrowser.open("https://hashxp.org/lightning/node/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "LN.plus"
                            on_release: webbrowser.open("https://lightningnetwork.plus/nodes/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "CheeseRobot"
                            on_release: webbrowser.open("https://cheeserobot.org/node/" + data_manager.data_man.lnd.get_info().identity_pubkey)
                        ContextMenuTextItem:
                            text: "Acinq"
                            on_release: webbrowser.open("https://explorer.acinq.co/n/" + data_manager.data_man.lnd.get_info().identity_pubkey)